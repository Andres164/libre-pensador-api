// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using libre_pensador_api.Models;

#nullable disable

namespace libre_pensador_api.Migrations
{
    [DbContext(typeof(CafeLibrePensadorDbContext))]
    [Migration("20230616184534_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("libre_pensador_api.Models.Card", b =>
                {
                    b.Property<string>("CardId")
                        .HasMaxLength(7)
                        .HasColumnType("character(7)")
                        .HasColumnName("card_id")
                        .IsFixedLength();

                    b.Property<byte[]>("EncryptedCustomerEmail")
                        .HasColumnType("bytea")
                        .HasColumnName("customer_email");

                    b.HasKey("CardId")
                        .HasName("cards_pkey");

                    b.ToTable("cards", (string)null);
                });

            modelBuilder.Entity("libre_pensador_api.Models.Expense", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ExpenseId"));

                    b.Property<decimal>("AmountSpent")
                        .HasColumnType("numeric");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Importance")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("ExpenseId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("libre_pensador_api.Models.ExpenseCategory", b =>
                {
                    b.Property<int>("ExpenseCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ExpenseCategoryId"));

                    b.Property<string>("ExpenseCategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ExpenseCategoryId");

                    b.ToTable("ExpenseCategories");
                });

            modelBuilder.Entity("libre_pensador_api.Models.LocalCustomer", b =>
                {
                    b.Property<byte[]>("EncryptedEmail")
                        .HasColumnType("bytea")
                        .HasColumnName("email");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("LoyverseCustomerId")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("loyverse_customer_id");

                    b.HasKey("EncryptedEmail")
                        .HasName("customers_pkey");

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("libre_pensador_api.Models.LogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Exception")
                        .HasColumnType("text")
                        .HasColumnName("exception");

                    b.Property<string>("LogLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("log_level");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("message");

                    b.Property<DateTime>("OccurredOn")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("occurred_on");

                    b.Property<string>("StackTrace")
                        .HasColumnType("text")
                        .HasColumnName("stack_trace");

                    b.HasKey("Id")
                        .HasName("log_entries_pkey");

                    b.ToTable("log_entries", (string)null);
                });

            modelBuilder.Entity("libre_pensador_api.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("user_name");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean")
                        .HasColumnName("is_admin");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("password");

                    b.HasKey("UserName")
                        .HasName("users_pkey");

                    b.ToTable("users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
